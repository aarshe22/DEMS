# 
# This container is a reverse-proxy server that maps
# application subdomains to service ports
# 
# The idea is that you use an infrastructure LB to spray
# the swarm with requests on port 80, and this guy will
# examine the subdomain and forward to the correct service
# ports within the swarm
#

user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
	
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;


	client_max_body_size 15M;

	map $http_host $destination {
		hostnames;
		
		api.* documents-api.{{K8S_SERVICE_FQDN}}:5001;
		apidms.* documents-api.{{K8S_SERVICE_FQDN}}:5001;
		dmsapi.* documents-api.{{K8S_SERVICE_FQDN}}:5001;
		dmsapitest.* documents-api.{{K8S_SERVICE_FQDN}}:5001;

		pcmsbridge.* documents-clients-pcmsbridge.{{K8S_SERVICE_FQDN}}:5050;
		bridgepcms.* documents-clients-pcmsbridge.{{K8S_SERVICE_FQDN}}:5050;
		pcmsbridgetest.* documents-clients-pcmsbridge.{{K8S_SERVICE_FQDN}}:5050;

		manager.* documents-clients-manager.{{K8S_SERVICE_FQDN}}:5000;
		managerdms.* documents-clients-manager.{{K8S_SERVICE_FQDN}}:5000;
		dmsmanager.* documents-clients-manager.{{K8S_SERVICE_FQDN}}:5000;
		dmsmanagertest.* documents-clients-manager.{{K8S_SERVICE_FQDN}}:5000;
	}

	server {

		listen 80;
		resolver {{K8S_DNS_HOST}};

		location /healthcheck {
			return 200 'ok';
		}

		location / {
			client_max_body_size 260M;
			chunked_transfer_encoding on;
			proxy_max_temp_file_size 0;
			proxy_buffering off;
			proxy_request_buffering off;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto https;
			proxy_set_header Host $http_host;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection $connection_upgrade;
			proxy_http_version 1.1;
			proxy_pass http://$destination;
		}
	}
}
